<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{B33409E6-B230-4B1B-B3C0-F87CE676B6DA}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>OculusRoomTiny</RootNamespace>
    <ProjectName>OculusRoomTiny (Vk)</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), OVRRootPath.props))\OVRRootPath.props" />
    <Import Project="$(MSBuildThisFileDirectory)\..\vulkan_sdk.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), OVRRootPath.props))\OVRRootPath.props" />
    <Import Project="$(MSBuildThisFileDirectory)\..\vulkan_sdk.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), OVRRootPath.props))\OVRRootPath.props" />
    <Import Project="$(MSBuildThisFileDirectory)\..\vulkan_sdk.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), OVRRootPath.props))\OVRRootPath.props" />
    <Import Project="$(MSBuildThisFileDirectory)\..\vulkan_sdk.props" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <ItemGroup Condition="'$(VulkanSDK_Found)'=='true'">
    <ClCompile Include="..\..\..\main.cpp" />
    <ClInclude Include="..\..\..\..\..\OculusRoomTiny_Advanced\Common\Win32_VulkanAppUtil.h" />
    <CustomBuild Include="..\..\..\ort.frag">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(VulkanSDK_Path)\Bin\glslangValidator.exe %(Identity) -V -o %(Identity).spv</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Compiling GLSL fragment shader</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">%(Identity).spv</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(VulkanSDK_Path)\Bin\glslangValidator.exe %(Identity) -V -o %(Identity).spv</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Compiling GLSL fragment shader</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">%(Identity).spv</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(VulkanSDK_Path)\Bin\glslangValidator.exe %(Identity) -V -o %(Identity).spv</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Compiling GLSL fragment shader</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(Identity).spv</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(VulkanSDK_Path)\Bin\glslangValidator.exe %(Identity) -V -o %(Identity).spv</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Compiling GLSL fragment shader</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(Identity).spv</Outputs>
    </CustomBuild>
    <CustomBuild Include="..\..\..\ort.vert">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(VulkanSDK_Path)\Bin\glslangValidator.exe %(Identity) -V -o %(Identity).spv</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Compiling GLSL vertex shader</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">%(Identity).spv</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(VulkanSDK_Path)\Bin\glslangValidator.exe %(Identity) -V -o %(Identity).spv</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Compiling GLSL vertex shader</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">%(Identity).spv</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(VulkanSDK_Path)\Bin\glslangValidator.exe %(Identity) -V -o %(Identity).spv</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Compiling GLSL vertex shader</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(Identity).spv</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(VulkanSDK_Path)\Bin\glslangValidator.exe %(Identity) -V -o %(Identity).spv</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Compiling GLSL vertex shader</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(Identity).spv</Outputs>
    </CustomBuild>
    <ResourceCompile Include="..\..\..\ort.rc" />
  </ItemGroup>
  <ItemGroup Condition="'$(VulkanSDK_Found)'!='true'">
    <CustomBuild Include="$(MSBuildThisFileDirectory)\..\vulkan_sdk.props">
      <Command>echo Vulkan SDK not found, skipping $(ProjectName)</Command>
      <Outputs>$(MSBuildThisFileDirectory)\vukan_not_found.txt</Outputs>
    </CustomBuild>
  </ItemGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
    <IntDir>$(ProjectDir)..\..\..\Obj\Windows\$(Platform)\$(Configuration)\$(VSDIR)\</IntDir>
    <OutDir>$(ProjectDir)..\..\..\Bin\Windows\$(Platform)\$(Configuration)\$(VSDIR)\</OutDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <IntDir>$(ProjectDir)..\..\..\Obj\Windows\$(Platform)\$(Configuration)\$(VSDIR)\</IntDir>
    <OutDir>$(ProjectDir)..\..\..\Bin\Windows\$(Platform)\$(Configuration)\$(VSDIR)\</OutDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>false</LinkIncremental>
    <IntDir>$(ProjectDir)..\..\..\Obj\Windows\$(Platform)\$(Configuration)\$(VSDIR)\</IntDir>
    <OutDir>$(ProjectDir)..\..\..\Bin\Windows\$(Platform)\$(Configuration)\$(VSDIR)\</OutDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <IntDir>$(ProjectDir)..\..\..\Obj\Windows\$(Platform)\$(Configuration)\$(VSDIR)\</IntDir>
    <OutDir>$(ProjectDir)..\..\..\Bin\Windows\$(Platform)\$(Configuration)\$(VSDIR)\</OutDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>OVR_BUILD_DEBUG;WIN32;_DEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <DebugInformationFormat>OldStyle</DebugInformationFormat>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <MinimalRebuild>false</MinimalRebuild>
      <FloatingPointModel>Precise</FloatingPointModel>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <TreatWarningAsError>true</TreatWarningAsError>
      <RuntimeTypeInfo>false</RuntimeTypeInfo>
      <AdditionalIncludeDirectories>$(OVRSDKROOT)LibOVR/Include/;$(OVRSDKROOT)LibOVRKernel/Src/;$(VulkanSDK_Path)/Include/;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <LinkTimeCodeGeneration>Default</LinkTimeCodeGeneration>
      <AdditionalDependencies>$(OVRSDKROOT)LibOVR/Lib/Windows/$(Platform)/$(Configuration)/$(VSDIR)/LibOVR.lib;$(VulkanSDK_Path)/Lib32/vulkan-1.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <BuildLog>
      <Path>$(ProjectName)\$(IntDir)\$(MSBuildProjectName).log</Path>
    </BuildLog>
    <Manifest>
      <EnableDPIAwareness>PerMonitorHighDPIAware</EnableDPIAwareness>
    </Manifest>
    <PostBuildEvent>
      <Message>Run Source Indexing</Message>
      <Command>if not exist "$(OVRSDKROOT)Tools\Scripts\SourceIndex.cmd" exit 0
call "$(OVRSDKROOT)Tools\Scripts\SourceIndex.cmd" "$(OVRSDKROOT)" "$(TargetDir)" "$(ProjectName)"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>OVR_BUILD_DEBUG;WIN32;_DEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <DebugInformationFormat>OldStyle</DebugInformationFormat>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <MinimalRebuild>false</MinimalRebuild>
      <FloatingPointModel>Precise</FloatingPointModel>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <TreatWarningAsError>true</TreatWarningAsError>
      <OmitFramePointers>false</OmitFramePointers>
      <RuntimeTypeInfo>false</RuntimeTypeInfo>
      <AdditionalIncludeDirectories>$(OVRSDKROOT)LibOVR/Include/;$(OVRSDKROOT)LibOVRKernel/Src/;$(VulkanSDK_Path)/Include/;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <LinkTimeCodeGeneration>Default</LinkTimeCodeGeneration>
      <AdditionalDependencies>$(OVRSDKROOT)LibOVR/Lib/Windows/$(Platform)/$(Configuration)/$(VSDIR)/LibOVR.lib;$(VulkanSDK_Path)/Lib/vulkan-1.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <BuildLog>
      <Path>$(ProjectName)\$(IntDir)\$(MSBuildProjectName).log</Path>
    </BuildLog>
    <Manifest>
      <EnableDPIAwareness>PerMonitorHighDPIAware</EnableDPIAwareness>
    </Manifest>
    <PostBuildEvent>
      <Message>Run Source Indexing</Message>
      <Command>if not exist "$(OVRSDKROOT)Tools\Scripts\SourceIndex.cmd" exit 0
call "$(OVRSDKROOT)Tools\Scripts\SourceIndex.cmd" "$(OVRSDKROOT)" "$(TargetDir)" "$(ProjectName)"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;NDEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <DebugInformationFormat>OldStyle</DebugInformationFormat>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <TreatWarningAsError>true</TreatWarningAsError>
      <RuntimeTypeInfo>false</RuntimeTypeInfo>
      <AdditionalOptions>/d2Zi+ %(AdditionalOptions)</AdditionalOptions>
      <AdditionalIncludeDirectories>$(OVRSDKROOT)LibOVR/Include/;$(OVRSDKROOT)LibOVRKernel/Src/;$(VulkanSDK_Path)/Include/;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <LinkTimeCodeGeneration>UseLinkTimeCodeGeneration</LinkTimeCodeGeneration>
      <AdditionalDependencies>$(OVRSDKROOT)LibOVR/Lib/Windows/$(Platform)/$(Configuration)/$(VSDIR)/LibOVR.lib;$(VulkanSDK_Path)/Lib32/vulkan-1.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <Manifest>
      <EnableDPIAwareness>PerMonitorHighDPIAware</EnableDPIAwareness>
    </Manifest>
    <PostBuildEvent>
      <Message>Run Source Indexing</Message>
      <Command>if not exist "$(OVRSDKROOT)Tools\Scripts\SourceIndex.cmd" exit 0
call "$(OVRSDKROOT)Tools\Scripts\SourceIndex.cmd" "$(OVRSDKROOT)" "$(TargetDir)" "$(ProjectName)"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;NDEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <DebugInformationFormat>OldStyle</DebugInformationFormat>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <TreatWarningAsError>true</TreatWarningAsError>
      <OmitFramePointers>false</OmitFramePointers>
      <RuntimeTypeInfo>false</RuntimeTypeInfo>
      <AdditionalOptions>/d2Zi+ %(AdditionalOptions)</AdditionalOptions>
      <AdditionalIncludeDirectories>$(OVRSDKROOT)LibOVR/Include/;$(OVRSDKROOT)LibOVRKernel/Src/;$(VulkanSDK_Path)/Include/;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <LinkTimeCodeGeneration>UseLinkTimeCodeGeneration</LinkTimeCodeGeneration>
      <AdditionalDependencies>$(OVRSDKROOT)LibOVR/Lib/Windows/$(Platform)/$(Configuration)/$(VSDIR)/LibOVR.lib;$(VulkanSDK_Path)/Lib/vulkan-1.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <Manifest>
      <EnableDPIAwareness>PerMonitorHighDPIAware</EnableDPIAwareness>
    </Manifest>
    <PostBuildEvent>
      <Message>Run Source Indexing</Message>
      <Command>if not exist "$(OVRSDKROOT)Tools\Scripts\SourceIndex.cmd" exit 0
call "$(OVRSDKROOT)Tools\Scripts\SourceIndex.cmd" "$(OVRSDKROOT)" "$(TargetDir)" "$(ProjectName)"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>
