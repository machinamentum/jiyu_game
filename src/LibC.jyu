
typealias c_string = *uint8;

func @c_function printf(fmt: c_string, temporary_c_vararg);

typealias FILE = void;
func @c_function fopen(path: c_string, mode: c_string) -> *FILE;
func @c_function fclose(file: *FILE) -> int32;
func @c_function ftell(file: *FILE) -> int32; // long int, this should be int32 on Windows but s64 on Linux/Mac
func @c_function fread(ptr: *void, size: size_t, count: size_t, file: *FILE) -> size_t;

let SEEK_SET = 0;
let SEEK_CUR = 1;
let SEEK_END = 2;

func @c_function fseek(file: *FILE, offset: int32 /*long int*/, origin: int32);

typealias size_t = uint32; // @FixMe I dont know if this is right

func @c_function malloc(size: size_t) -> *void;
func @c_function free(ptr: *void);
func @c_function memcpy(dest: *void, src: *void, count: size_t);

func @c_function atof(str: c_string) -> double;
func @c_function atoi(str: c_string) -> int32;

func @c_function tan(a: double) -> double;
